name: CI for Go Code #Naming the workflows
on: #for event triggering
  push:
    branches: [main] #add more branch with a comma
  pull_request:
    branches: [main]
    
jobs: #jobs to exe
  build: #name of the job
    name: Load OS #name for printing
    runs-on: ubuntu-latest #specify os in virtual machine
    steps:
    - name: Print Hello
      run: | #run terminal command
        ls
        echo Hello!
    - name: Setup Go env
      uses: actions/setup-go@v3.2.0
      with:
        go-version: 1.18
    - name: Checking current version
      run: go version
    - name: Checkout repo
      uses: actions/checkout@v2.4.2 #pulls code from repo and puts into virtual machine
      
    - name: Checkout Remote Private Repo
      uses: actions/checkout@v2.4.2
      with: 
        repositiry: lowkh2/GoSchoolRemoteExample
        token: ${{ secrets.GOSECRETS }}
        path: remote
    - name: Post Checkout Remote Private Repo
      run: ls
    - name: Checking File sys
      run: |
        cd remote
        ls
        
    
    - name: Installing dependencies
      run: | 
        go mod init calc #for go mod. if we use go build, it will do the same for the new 3 lines
        go mod tidy
        go get github.com/franela/goblin
        go install github.com/tebeka/go2xunit@latest
        go test -v
        go test -v | go2xunit -output tests.xml
        
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action/composite@v1
      if: always()
      with:
        files: tests.xml
        
    - if: ${{ failure() }}
      uses: nashmaniac/create-issue-action@v1.1
      name: Create Issue Action
      with:
        title: Build Failed
        token: ${{secrets.GITHUB_TOKEN}}
        assignees: ${{github.actor}}
        labels: worflow-failed
        body: Workflow failed for commit ${{github.sha}}
        
        
        
        
        
